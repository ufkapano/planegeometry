DELAUNAY TRIANGULATION
----------------------------------------------------------------------
from planegeometry.triangulations.naive import DelaunayNaive
from planegeometry.triangulations.flipping import DelaunayFlipping
from planegeometry.triangulations.bowyerwatson import BowyerWatson

point_list = [...]   # points in general position
#algorithm = DelaunayNaive(point_list)
#algorithm = DelaunayFlipping(point_list)
algorithm = BowyerWatson(point_list)
algorithm.run()
print ( algorithm.tc )   # triangle collection
G = algorithm.tc.to_graph()   # graph with segments
for segment in G.iteredges():
    print ( segment )
----------------------------------------------------------------------
EOF
