MONOTONE POLYGONS
----------------------------------------------------------------------
# RECOGNITION

----------------------------------------------------------------------
# MONOTONE TRIANGULATION

# Triangulation with a triangle collection.
from planegeometry.structures.points import Point
from planegeometry.structures.polygons import Polygon
from planegeometry.triangulations.ymonotonetc import YMonotoneTriangulationTC as Triangulation

point_list = [...]   # points for y-monotone polygon
polygon = Polygon(*point_list)
algorithm = Triangulation(polygon)
algorithm.run()
print ( algorithm.tc )   # triangle collection
assert len(algorithm.tc) == len(point_list)-2
G = algorithm.tc.to_graph()   # graph with segments
for segment in G.iteredges():
    print ( segment )
----------------------------------------------------------------------
# Triangulation with a planar map.
from planegeometry.structures.points import Point
from planegeometry.structures.polygons import Polygon
from planegeometry.triangulations.fanpm import FanTriangulationPM as Triangulation
from planegeometry.triangulations.ymonotonepm import YMonotoneTriangulationPM as Triangulation

point_list = [...]   # points for y-monotone polygon
polygon = Polygon(*point_list)
algorithm = Triangulation(polygon)
algorithm.run()
assert len(algorithm.planar_map.face2edge) == len(point_list)-1
G = algorithm.planar_map   # graph with segments
for segment in G.iteredges():
    print ( segment )
----------------------------------------------------------------------
# MONOTONE PARTITION

----------------------------------------------------------------------
EOF
